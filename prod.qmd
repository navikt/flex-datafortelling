---
title: "Team flex OKR T1 2024"
format:
    html:
        self-contained: true
---

## KR1: Andelen som ikke finner det de leter etter på ditt sykefravær halveres

```{python}
import os
from datetime import datetime

import matplotlib.pyplot as plt
import pandas as pd
from google.cloud import bigquery

print(f"Denne datafortellingen er sist oppdatert {datetime.now()}\n")

credentials_path = os.path.expanduser('~/.config/gcloud/application_default_credentials.json')

authenticated_locally = os.path.isfile(credentials_path)
running_in_prod = os.getenv('NAIS_CLUSTER_NAME', '').lower() == 'prod-gcp'

if authenticated_locally or running_in_prod:  # Check if the file exists
    if authenticated_locally:
        os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = credentials_path

    bigquery_client = bigquery.Client(project='flex-prod-af40')

    query = """

    SELECT
      DATE(`flex-prod-af40.flex_dataset.flexjar_feedback_view`.`opprettet`)
       AS `dag`,
      SUM(CASE WHEN `svar` = 'JA' THEN 1 ELSE 0 END) AS `antall_ja`,
      SUM(CASE WHEN `svar` = 'NEI' THEN 1 ELSE 0 END) AS `antall_nei`,
      SUM(CASE WHEN `svar` = 'FORBEDRING' THEN 1 ELSE 0 END) AS `antall_forbedring`
    FROM
      `flex-prod-af40.flex_dataset.flexjar_feedback_view`
    WHERE
      `flex-prod-af40.flex_dataset.flexjar_feedback_view`.`feedbackId` = 'ditt-sykefravaer-fant-du'
    GROUP BY
      `dag`
    ORDER BY
      `dag` DESC

    """

    # Anta at df er opprettet som følger:
    df = bigquery_client.query(query).to_dataframe()

    # Sørg for at 'dag' er i datetime format
    df['dag'] = pd.to_datetime(df['dag'])

    baseline_start = '2024-02-04'
    baseline_end = '2024-02-23'
    # Definer periodene
    periode1_start = pd.to_datetime(baseline_start)
    periode1_slutt = pd.to_datetime(baseline_end)
    periode2_start = datetime.now() - pd.Timedelta(weeks=2)  # Siste to ukene


    # Beregn andeler for periodene
    def beregn_andeler(subset):
        subset = subset.copy()  # Lag en kopi for å unngå endring på en slice
        subset['totalt'] = subset['antall_nei'] + subset['antall_forbedring'] + subset['antall_ja']
        subset['andel_nei_forbedring'] = (subset['antall_nei'] + subset['antall_forbedring']) / subset['totalt']
        return subset


    # Filtre datasettet for de to periodene og beregn andeler
    periode1_df = df[(df['dag'] >= periode1_start) & (df['dag'] <= periode1_slutt)]
    periode2_df = df[df['dag'] >= periode2_start]

    periode1_df = beregn_andeler(periode1_df)
    periode2_df = beregn_andeler(periode2_df)

    # Beregn gjennomsnittlig andel for hver periode
    andel_periode1 = periode1_df['andel_nei_forbedring'].mean()
    andel_periode2 = periode2_df['andel_nei_forbedring'].mean()

    # Beregn hvor langt unna halvering dere er
    mål_halvering = andel_periode1 / 2

    # Vis resultatene
    print(f"Nullpunktmålingen går fra {baseline_start} til {baseline_end}.")
    print("Andelen som ikke finner det de leter etter på ditt sykefravær måles ved andelen \nflexjar feedbacks på ditt sykefravær hvor brukeren har svart at de ikke fant det \nde lurte på eller har foreslått en forbedring.")
    print(f"\nAndelen som ikke fant det de lette etter i nullpunktsmålingen er {andel_periode1:.1%}")
    print(f"Vårt mål er da {mål_halvering:.1%}")
    print(f"\nAndelen som ikke fant det de lette etter de siste to ukene er {andel_periode2:.1%}")

    # Reset av df før vi tegner graf
    df = bigquery_client.query(query).to_dataframe()

    df['dag'] = pd.to_datetime(df['dag'])

    cutoff_date = pd.to_datetime(baseline_start)
    today = pd.to_datetime(datetime.now().date())
    df = df[(df['dag'] >= cutoff_date) & (df['dag'] < today)]

    df['dag'] = pd.to_datetime(df['dag'])

    df['total_votes'] = df[['antall_ja', 'antall_nei', 'antall_forbedring']].sum(axis=1)
    df['pct_ja'] = (df['antall_ja'] / df['total_votes']) * 100
    df['pct_nei'] = (df['antall_nei'] / df['total_votes']) * 100
    df['pct_forbedring'] = (df['antall_forbedring'] / df['total_votes']) * 100

    window_size = pd.Timedelta(days=7)
    rolling_avg = df.rolling(window=window_size, on='dag').mean()
    rolling_avg.head(20)

    plt.figure(figsize=(8, 6))
    plt.plot(rolling_avg['dag'], rolling_avg['pct_ja'], label='Ja')
    plt.plot(rolling_avg['dag'], rolling_avg['pct_nei'], label='Nei')
    plt.plot(rolling_avg['dag'], rolling_avg['pct_forbedring'], label='Forbedring')

    baseline = (1 - andel_periode1) * 100
    goal = (1 - mål_halvering) * 100
    plt.axhline(y=baseline, color='gray', linestyle='--', label='Utgangspunkt')
    plt.axhline(y=goal, color='gold', linestyle='--', label='Mål')

    plt.xlabel('Dato')
    plt.ylabel('Prosent (%)')
    plt.title('Prosentvis fordeling av stemmer per dag (Rolling Average)')

    plt.legend()

    plt.xticks(rotation=45)

    plt.tight_layout()
    plt.show()


else:

    print("Credentials file not found OR not running in prod. Functionality requiring credentials/prod env will be skipped.")

```

## Måling av endring på spørsmål i sykepengesøknad
### Hva svarer næringsdrivende på inntektsspørsmål?

```{python}
import os
from datetime import datetime

from google.cloud import bigquery

from grafer_og_visninger.pie_chart import side_ved_side_pie_chart
from queries.naeringsdrivende_inntekt import naeringsdrivende_inntekt_foer_etter_endring, InntektsSporsmal, \
    question_tags

print(f"Denne datafortellingen er sist oppdatert {datetime.now()}\n")
print("""
Den 05. april 2024, 13:05:00 endret vi teksten på spørsmålet om drift i virksomheten 
for næringsdrivende
fra "Har det vært drift i virksomheten frem til du ble sykmeldt?" 
til "Har det vært drift i virksomheten din fram til dagen du ble sykmeldt?". \n
Vi la også inn hjelpeteksten: 
"Svar ja hvis det fortsatt er drift og/eller du har tenkt å ta opp driften når du er 
frisk nok. Svar nei hvis virksomheten er avviklet og slettet før du ble sykmeldt.
Når du avvikler et firma velger du selv at du ikke vil drive virksomheten din lenger. 
Vi spør om dette fordi det er situasjonen din når du ble sykmeldt som bestemmer om NAV 
vurderer deg som selvstendig næringsdrivende eller ikke. Hvis virksomheten din er 
avviklet og slettet før du ble sykmeldt, vil du ikke ha rett til sykepenger som 
selvstendig næringsdrivende. Du vil da bli vurdert etter andre bestemmelser." \n
""")

credentials_path = os.path.expanduser('~/.config/gcloud/application_default_credentials.json')

authenticated_locally = os.path.isfile(credentials_path)
running_in_prod = os.getenv('NAIS_CLUSTER_NAME', '').lower() == 'prod-gcp'

if authenticated_locally or running_in_prod:  # Check if the file exists
    if authenticated_locally:
        os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = credentials_path

    bigquery_client = bigquery.Client(project='flex-prod-af40')

    # Inntektsmelding næringsdrivende
    naeringsdrivende_inntekt_query = naeringsdrivende_inntekt_foer_etter_endring()
    df = bigquery_client.query(naeringsdrivende_inntekt_query).to_dataframe()

    # Calculate sums for each period
    def aggregate_data(df, periods, tags):
        """Aggregate data by periods and tags."""
        period_data = {}
        for period in periods:
            period_df = df[df['period'] == period]
            sums = {tag: period_df[period_df['sporsmal_tag'] == tag]['count'].sum() for tag in tags}
            period_data[period] = sums
        return period_data


    perioder = ['foer', 'etter']
    periode_data = aggregate_data(df, perioder, question_tags)


    def get_data_for_tag(tag, data):
        """Retrieve data for a specific tag across specified periods."""
        return {period: data[period].get(tag, 0) for period in perioder}


    # Generating data for all tags
    data_oversikt = {tag: get_data_for_tag(tag, periode_data) for tag in question_tags}
    ja_nei_kategorier = ['Ja', 'Nei']

    print("Verdier for spørsmål om inntektsopplysninger 30 dager før endring av tekst:")
    fortelling_foer = f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_DRIFT_VIRKSOMHETEN_JA.value]['foer']} var antallet næringsdrivende som hadde drift i virksomheten frem til sykmelding, \n{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_DRIFT_VIRKSOMHETEN_NEI.value]['foer']} hadde ikke drift i virksomheten. \n"
    fortelling_foer += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_NY_I_ARBEIDSLIVET_JA.value]['foer']} var antallet som svarte at de var ny i arbeidslivet, \n{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_NY_I_ARBEIDSLIVET_NEI.value]['foer']} svarte at de ikke var nye i arbeidslivet. \n"
    fortelling_foer += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING.value]['foer']} var totalt antall som svarte ja på en varig endring i inntekten. \n"
    fortelling_foer += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING_BEGRUNNELSE_OPPRETTELSE_NEDLEGGELSE.value]['foer']} var antallet som svarte at de hadde lagt ned virksomheten. \n"
    fortelling_foer += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING_BEGRUNNELSE_ENDRET_INNSATS.value]['foer']} svarte at de endret innsats i virksomheten. \n"
    fortelling_foer += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING_BEGRUNNELSE_OMLEGGING_AV_VIRKSOMHETEN.value]['foer']} svarte at de hadde omlagt virksomheten. \n"
    fortelling_foer += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING_BEGRUNNELSE_ENDRET_MARKEDSSITUASJON.value]['foer']} svarte at det var endringer i markedssituasjonen. \n"
    fortelling_foer += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING_BEGRUNNELSE_ANNET.value]['foer']} svarte at det var andre grunner for endring. \n"
    fortelling_foer += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING_25_PROSENT.value]['foer']} næringsdrivende rapporterte en endring på minst 25 % i sin virksomhet. \n"
    print(fortelling_foer)
    
    print("Verdier for spørsmål om inntektsopplysninger (opptil) 30 dager etter endring av tekst:")
    fortelling_etter = f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_DRIFT_VIRKSOMHETEN_JA.value]['etter']} var antallet næringsdrivende som hadde drift i virksomheten frem til sykmelding, \n{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_DRIFT_VIRKSOMHETEN_NEI.value]['etter']} hadde ikke drift i virksomheten. \n"
    fortelling_etter += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_NY_I_ARBEIDSLIVET_JA.value]['etter']} var antallet som svarte at de var ny i arbeidslivet, \n{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_NY_I_ARBEIDSLIVET_NEI.value]['etter']} svarte at de ikke var nye i arbeidslivet. \n"
    fortelling_etter += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING.value]['etter']} var totalt antall som svarte ja på en varig endring i inntekten. \n"
    fortelling_etter += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING_BEGRUNNELSE_OPPRETTELSE_NEDLEGGELSE.value]['etter']} var antallet som svarte at de hadde lagt ned virksomheten. \n"
    fortelling_etter += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING_BEGRUNNELSE_ENDRET_INNSATS.value]['etter']} svarte at de endret innsats i virksomheten. \n"
    fortelling_etter += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING_BEGRUNNELSE_OMLEGGING_AV_VIRKSOMHETEN.value]['etter']} svarte at de hadde omlagt virksomheten. \n"
    fortelling_etter += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING_BEGRUNNELSE_ENDRET_MARKEDSSITUASJON.value]['etter']} svarte at det var endringer i markedssituasjonen. \n"
    fortelling_etter += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING_BEGRUNNELSE_ANNET.value]['etter']} svarte at det var andre grunner for endring. \n"
    fortelling_etter += f"{data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_VARIG_ENDRING_25_PROSENT.value]['etter']} næringsdrivende rapporterte en endring på minst 25 % i sin virksomhet. \n"
    print(fortelling_etter)

    print("Grafene viser svar 30 dager før endring, og svar (opptil) 30 dager etter endring")
    side_ved_side_pie_chart(ja_nei_kategorier,
                            [
                                data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_DRIFT_VIRKSOMHETEN_JA.value]['foer'],
                                data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_DRIFT_VIRKSOMHETEN_NEI.value]['foer']
                            ],
                            [
                                data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_DRIFT_VIRKSOMHETEN_JA.value]['etter'],
                                data_oversikt[InntektsSporsmal.INNTEKTSOPPLYSNINGER_DRIFT_VIRKSOMHETEN_NEI.value]['etter']
                            ],
                            'Svar på spørsmål om drift i virksomheten')

else:

    print(
        "Credentials file not found OR not running in prod. Functionality requiring credentials/prod env will be skipped.")

```